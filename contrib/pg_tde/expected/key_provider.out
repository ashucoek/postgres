CREATE EXTENSION IF NOT EXISTS pg_tde;
SELECT  * FROM pg_tde_key_info();
 key_name | provider_name | provider_id | key_creation_time 
----------+---------------+-------------+-------------------
          |               |             | 
(1 row)

SELECT pg_tde_add_database_key_provider('file', 'incorrect-file-provider',  '{"path": {"foo": "/tmp/pg_tde_test_keyring.per"}}');
ERROR:  key provider value cannot be an object
SELECT pg_tde_add_database_key_provider_file('file-provider','/tmp/pg_tde_test_keyring.per');
 pg_tde_add_database_key_provider_file 
---------------------------------------
 
(1 row)

SELECT pg_tde_add_database_key_provider_file('file-provider2','/tmp/pg_tde_test_keyring2.per');
 pg_tde_add_database_key_provider_file 
---------------------------------------
 
(1 row)

SELECT pg_tde_add_database_key_provider_file('file-provider','/tmp/pg_tde_test_keyring_dup.per');
ERROR:  Key provider "file-provider" already exists.
SELECT * FROM pg_tde_list_all_database_key_providers();
 id |      name      | type |                  options                   
----+----------------+------+--------------------------------------------
  1 | file-provider  | file | {"path" : "/tmp/pg_tde_test_keyring.per"}
  2 | file-provider2 | file | {"path" : "/tmp/pg_tde_test_keyring2.per"}
(2 rows)

SELECT pg_tde_verify_key();
ERROR:  principal key not configured for current database
SELECT pg_tde_set_key_using_database_key_provider('test-db-key','file-provider');
 pg_tde_set_key_using_database_key_provider 
--------------------------------------------
 
(1 row)

SELECT pg_tde_verify_key();
 pg_tde_verify_key 
-------------------
 
(1 row)

SELECT pg_tde_change_database_key_provider_file('not-existent-provider','/tmp/pg_tde_test_keyring.per');
ERROR:  key provider "not-existent-provider" does not exists
SELECT * FROM pg_tde_list_all_database_key_providers();
 id |      name      | type |                  options                   
----+----------------+------+--------------------------------------------
  1 | file-provider  | file | {"path" : "/tmp/pg_tde_test_keyring.per"}
  2 | file-provider2 | file | {"path" : "/tmp/pg_tde_test_keyring2.per"}
(2 rows)

SELECT pg_tde_change_database_key_provider('file', 'file-provider', '{"path": {"foo": "/tmp/pg_tde_test_keyring.per"}}');
ERROR:  key provider value cannot be an object
SELECT * FROM pg_tde_list_all_database_key_providers();
 id |      name      | type |                  options                   
----+----------------+------+--------------------------------------------
  1 | file-provider  | file | {"path" : "/tmp/pg_tde_test_keyring.per"}
  2 | file-provider2 | file | {"path" : "/tmp/pg_tde_test_keyring2.per"}
(2 rows)

SELECT pg_tde_add_global_key_provider_file('file-keyring','/tmp/pg_tde_test_keyring.per');
 pg_tde_add_global_key_provider_file 
-------------------------------------
 
(1 row)

SELECT pg_tde_add_global_key_provider_file('file-keyring2','/tmp/pg_tde_test_keyring2.per');
 pg_tde_add_global_key_provider_file 
-------------------------------------
 
(1 row)

SELECT id, name FROM pg_tde_list_all_global_key_providers();
 id |     name      
----+---------------
 -4 | file-keyring
 -5 | file-keyring2
(2 rows)

-- fails
SELECT pg_tde_delete_database_key_provider('file-provider');
ERROR:  Can't delete a provider which is currently in use
SELECT id, name FROM pg_tde_list_all_database_key_providers();
 id |      name      
----+----------------
  1 | file-provider
  2 | file-provider2
(2 rows)

-- works
SELECT pg_tde_delete_database_key_provider('file-provider2');
 pg_tde_delete_database_key_provider 
-------------------------------------
 
(1 row)

SELECT id, name FROM pg_tde_list_all_database_key_providers();
 id |     name      
----+---------------
  1 | file-provider
(1 row)

SELECT id, name FROM pg_tde_list_all_global_key_providers();
 id |     name      
----+---------------
 -4 | file-keyring
 -5 | file-keyring2
(2 rows)

SELECT pg_tde_set_key_using_global_key_provider('test-db-key', 'file-keyring', false);
 pg_tde_set_key_using_global_key_provider 
------------------------------------------
 
(1 row)

-- fails
SELECT pg_tde_delete_global_key_provider('file-keyring');
ERROR:  Can't delete a provider which is currently in use
SELECT id, name FROM pg_tde_list_all_global_key_providers();
 id |     name      
----+---------------
 -4 | file-keyring
 -5 | file-keyring2
(2 rows)

-- works
SELECT pg_tde_delete_global_key_provider('file-keyring2');
 pg_tde_delete_global_key_provider 
-----------------------------------
 
(1 row)

SELECT id, name FROM pg_tde_list_all_global_key_providers();
 id |     name     
----+--------------
 -4 | file-keyring
(1 row)

-- Creating a file key provider fails if we can't open or create the file
SELECT pg_tde_add_database_key_provider_file('will-not-work','/cant-create-file-in-root.per');
ERROR:  Failed to open keyring file /cant-create-file-in-root.per: Permission denied
-- Creating key providers fails if any required parameter is NULL
SELECT pg_tde_add_database_key_provider(NULL, 'name', '{}');
ERROR:  provider type cannot be null
SELECT pg_tde_add_database_key_provider('file', NULL, '{}');
ERROR:  provider name cannot be null
SELECT pg_tde_add_database_key_provider('file', 'name', NULL);
ERROR:  provider options cannot be null
SELECT pg_tde_add_global_key_provider(NULL, 'name', '{}');
ERROR:  provider type cannot be null
SELECT pg_tde_add_global_key_provider('file', NULL, '{}');
ERROR:  provider name cannot be null
SELECT pg_tde_add_global_key_provider('file', 'name', NULL);
ERROR:  provider options cannot be null
-- Empty string is not allowed for a key provider name
SELECT pg_tde_add_database_key_provider('file', '', '{}');
ERROR:  provider name "" is too short
SELECT pg_tde_add_global_key_provider('file', '', '{}');
ERROR:  provider name "" is too short
-- Creating key providers fails if the name is too long
SELECT pg_tde_add_database_key_provider('file', repeat('K', 128), '{}');
ERROR:  provider name "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK" is too long
HINT:  Maximum length is 127 bytes.
SELECT pg_tde_add_global_key_provider('file', repeat('K', 128), '{}');
ERROR:  provider name "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK" is too long
HINT:  Maximum length is 127 bytes.
-- Creating key providers fails if options is too long
SELECT pg_tde_add_database_key_provider('file', 'name', json_build_object('key', repeat('K', 1024)));
ERROR:  too large provider options, maximum size is 1023 bytes
SELECT pg_tde_add_global_key_provider('file', 'name', json_build_object('key', repeat('K', 1024)));
ERROR:  too large provider options, maximum size is 1023 bytes
-- Creating key providers fails if configuration is not a JSON object
SELECT pg_tde_add_database_key_provider('file', 'provider', '"bare string"');
ERROR:  key provider options must be an object
SELECT pg_tde_add_database_key_provider('file', 'provider', '["array"]');
ERROR:  key provider options must be an object
SELECT pg_tde_add_database_key_provider('file', 'provider', 'true');
ERROR:  key provider options must be an object
SELECT pg_tde_add_database_key_provider('file', 'provider', 'null');
ERROR:  key provider options must be an object
-- Creating key providers fails if vaules are not scalar
SELECT pg_tde_add_database_key_provider('file', 'provider', '{"path": {}}');
ERROR:  key provider value cannot be an object
SELECT pg_tde_add_database_key_provider('file', 'provider', '{"path": ["array"]}');
ERROR:  unexpected array in field "path"
SELECT pg_tde_add_database_key_provider('file', 'provider', '{"path": true}');
ERROR:  unexpected boolean in field "path"
-- Modifying key providers fails if any required parameter is NULL
SELECT pg_tde_change_database_key_provider(NULL, 'file-keyring', '{}');
ERROR:  provider type cannot be null
SELECT pg_tde_change_database_key_provider('file', NULL, '{}');
ERROR:  provider name cannot be null
SELECT pg_tde_change_database_key_provider('file', 'file-keyring', NULL);
ERROR:  provider options cannot be null
SELECT pg_tde_change_global_key_provider(NULL, 'file-keyring', '{}');
ERROR:  provider type cannot be null
SELECT pg_tde_change_global_key_provider('file', NULL, '{}');
ERROR:  provider name cannot be null
SELECT pg_tde_change_global_key_provider('file', 'file-keyring', NULL);
ERROR:  provider options cannot be null
-- Modifying key providers fails if options is too long
SELECT pg_tde_change_database_key_provider('file', 'file-provider', json_build_object('key', repeat('V', 1024)));
ERROR:  too large provider options, maximum size is 1023 bytes
SELECT pg_tde_change_global_key_provider('file', 'file-keyring', json_build_object('key', repeat('V', 1024)));
ERROR:  too large provider options, maximum size is 1023 bytes
-- Modifying key providers fails if configuration is not a JSON object
SELECT pg_tde_change_database_key_provider('file', 'file-provider', '"bare string"');
ERROR:  key provider options must be an object
SELECT pg_tde_change_database_key_provider('file', 'file-provider', '["array"]');
ERROR:  key provider options must be an object
SELECT pg_tde_change_database_key_provider('file', 'file-provider', 'true');
ERROR:  key provider options must be an object
SELECT pg_tde_change_database_key_provider('file', 'file-provider', 'null');
ERROR:  key provider options must be an object
-- Modifying key providers fails if vaules are not scalar
SELECT pg_tde_change_database_key_provider('file', 'file-provider', '{"path": {}}');
ERROR:  key provider value cannot be an object
SELECT pg_tde_change_database_key_provider('file', 'file-provider', '{"path": ["array"]}');
ERROR:  unexpected array in field "path"
SELECT pg_tde_change_database_key_provider('file', 'file-provider', '{"path": true}');
ERROR:  unexpected boolean in field "path"
-- Modifying key providers fails if new settings can't fetch existing server key
SELECT pg_tde_add_global_key_provider_file('global-provider', '/tmp/global-provider-file-1');
 pg_tde_add_global_key_provider_file 
-------------------------------------
 
(1 row)

SELECT pg_tde_set_server_key_using_global_key_provider('server-key', 'global-provider');
WARNING:  The WAL encryption feature is currently in beta and may be unstable. Do not use it in production environments!
 pg_tde_set_server_key_using_global_key_provider 
-------------------------------------------------
 
(1 row)

SELECT pg_tde_change_global_key_provider_file('global-provider','/tmp/global-provider-file-2');
ERROR:  could not fetch key "server-key" used as server key from modified key provider "global-provider": 0
-- Modifying key providers fails if new settings can't fetch existing database key
SELECT pg_tde_add_global_key_provider_file('global-provider2', '/tmp/global-provider-file-1');
 pg_tde_add_global_key_provider_file 
-------------------------------------
 
(1 row)

SELECT current_database() AS regress_database
\gset
CREATE DATABASE db_using_global_provider;
\c db_using_global_provider;
CREATE EXTENSION pg_tde;
SELECT pg_tde_set_key_using_global_key_provider('database-key', 'global-provider2');
 pg_tde_set_key_using_global_key_provider 
------------------------------------------
 
(1 row)

\c :regress_database
SELECT pg_tde_change_global_key_provider_file('global-provider2', '/tmp/global-provider-file-2');
ERROR:  could not fetch key "database-key" used by database "db_using_global_provider" from modified key provider "global-provider2": 0
DROP DATABASE db_using_global_provider;
CREATE DATABASE db_using_database_provider;
\c db_using_database_provider;
CREATE EXTENSION pg_tde;
SELECT pg_tde_add_database_key_provider_file('db-provider', '/tmp/db-provider-file');
 pg_tde_add_database_key_provider_file 
---------------------------------------
 
(1 row)

SELECT pg_tde_set_key_using_database_key_provider('database-key', 'db-provider');
 pg_tde_set_key_using_database_key_provider 
--------------------------------------------
 
(1 row)

SELECT pg_tde_change_database_key_provider_file('db-provider', '/tmp/db-provider-file-2');
ERROR:  could not fetch key "database-key" used by database "db_using_database_provider" from modified key provider "db-provider": 0
\c :regress_database
DROP DATABASE db_using_database_provider;
-- Deleting key providers fails if key name is NULL
SELECT pg_tde_delete_database_key_provider(NULL);
ERROR:  provider_name cannot be null
SELECT pg_tde_delete_global_key_provider(NULL);
ERROR:  provider_name cannot be null
-- Setting principal key fails if provider name is NULL
SELECT pg_tde_set_default_key_using_global_key_provider('key', NULL);
ERROR:  key provider name cannot be null
SELECT pg_tde_set_key_using_database_key_provider('key', NULL);
ERROR:  key provider name cannot be null
SELECT pg_tde_set_key_using_global_key_provider('key', NULL);
ERROR:  key provider name cannot be null
SELECT pg_tde_set_server_key_using_global_key_provider('key', NULL);
WARNING:  The WAL encryption feature is currently in beta and may be unstable. Do not use it in production environments!
ERROR:  key provider name cannot be null
-- Setting principal key fails if key name is NULL
SELECT pg_tde_set_default_key_using_global_key_provider(NULL, 'file-keyring');
ERROR:  key name cannot be null
SELECT pg_tde_set_key_using_database_key_provider(NULL, 'file-keyring');
ERROR:  key name cannot be null
SELECT pg_tde_set_key_using_global_key_provider(NULL, 'file-keyring');
ERROR:  key name cannot be null
SELECT pg_tde_set_server_key_using_global_key_provider(NULL, 'file-keyring');
WARNING:  The WAL encryption feature is currently in beta and may be unstable. Do not use it in production environments!
ERROR:  key name cannot be null
-- Empty string is not allowed for a principal key name
SELECT pg_tde_set_default_key_using_global_key_provider('', 'file-keyring');
ERROR:  key name "" is too short
SELECT pg_tde_set_key_using_database_key_provider('', 'file-keyring');
ERROR:  key name "" is too short
SELECT pg_tde_set_key_using_global_key_provider('', 'file-keyring');
ERROR:  key name "" is too short
SELECT pg_tde_set_server_key_using_global_key_provider('', 'file-keyring');
WARNING:  The WAL encryption feature is currently in beta and may be unstable. Do not use it in production environments!
ERROR:  key name "" is too short
-- Setting principal key fails if the key name is too long
SELECT pg_tde_set_default_key_using_global_key_provider(repeat('K', 256), 'file-keyring');
ERROR:  key name "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK" is too long
HINT:  Maximum length is 255 bytes.
SELECT pg_tde_set_key_using_database_key_provider(repeat('K', 256), 'file-provider');
ERROR:  key name "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK" is too long
HINT:  Maximum length is 255 bytes.
SELECT pg_tde_set_key_using_global_key_provider(repeat('K', 256), 'file-keyring');
ERROR:  key name "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK" is too long
HINT:  Maximum length is 255 bytes.
SELECT pg_tde_set_server_key_using_global_key_provider(repeat('K', 256), 'file-keyring');
WARNING:  The WAL encryption feature is currently in beta and may be unstable. Do not use it in production environments!
ERROR:  key name "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK" is too long
HINT:  Maximum length is 255 bytes.
DROP EXTENSION pg_tde;
